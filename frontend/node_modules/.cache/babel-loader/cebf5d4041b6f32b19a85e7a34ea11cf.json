{"ast":null,"code":"var _jsxFileName = \"E:\\\\CDAC-PROJECT\\\\frontend\\\\src\\\\component\\\\common\\\\ProtectedRoute.js\";\n// import React, { useEffect, useState} from 'react';\n// import { Route, Redirect } from 'react-router-dom'\n// import { useSelector } from \"react-redux\";\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const auth = useSelector(state => state.auth)\n//   const [isAuthenticated, setIsAuthenticated] = useState(null)  \n//   useEffect(() => {\n//     let token = localStorage.getItem('jwttoken')\n//         if(token){\n//                 setIsAuthenticated(true)\n//         } else {\n//            setIsAuthenticated(false)\n//         }\n//     // eslint-disable-next-line\n//   }, [auth])\n//   if(isAuthenticated === null){\n//     return <></>\n//   }\n//   return (\n//     <Route {...rest} render={props =>\n//       !isAuthenticated ? (\n//         <Redirect to='/login'/>\n//       ) : (\n//         <Component {...props} />\n//       )\n//     }\n//     />\n//   );\n// };\n// export default PrivateRoute;\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      let token = localStorage.getItem('jwttoken');\n      console.log(token);\n\n      if (token) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["E:/CDAC-PROJECT/frontend/src/component/common/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","rest","props","token","localStorage","getItem","console","log","pathname","state","from","location"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAqC;AAClE,sBACE,QAAC,KAAD,OACIA,IADJ;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AAEjB,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,UAAIA,KAAJ,EAAW;AACT,4BAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFM,YAAAA,QAAQ,EAAE,GADR;AAEFC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAER,KAAK,CAACS;AADP;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD;AACF;AApBH;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBM;KAAMb,c","sourcesContent":["// import React, { useEffect, useState} from 'react';\r\n// import { Route, Redirect } from 'react-router-dom'\r\n// import { useSelector } from \"react-redux\";\r\n\r\n// const PrivateRoute = ({ component: Component, ...rest }) => {\r\n//   const auth = useSelector(state => state.auth)\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(null)  \r\n//   useEffect(() => {\r\n//     let token = localStorage.getItem('jwttoken')\r\n//         if(token){\r\n            \r\n//                 setIsAuthenticated(true)\r\n            \r\n//         } else {\r\n//            setIsAuthenticated(false)\r\n//         }\r\n//     // eslint-disable-next-line\r\n//   }, [auth])\r\n\r\n//   if(isAuthenticated === null){\r\n//     return <></>\r\n//   }\r\n\r\n//   return (\r\n//     <Route {...rest} render={props =>\r\n//       !isAuthenticated ? (\r\n//         <Redirect to='/login'/>\r\n//       ) : (\r\n//         <Component {...props} />\r\n//       )\r\n//     }\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest}) => {\r\n  return (\r\n    <Route\r\n    {...rest}\r\n      render={(props) => {\r\n       \r\n        let token = localStorage.getItem('jwttoken')\r\n        console.log(token);\r\n        if (token) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}